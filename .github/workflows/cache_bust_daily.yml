name: Daily Cache Bust

on:
  schedule:
    # Run at 2 AM UTC every day (2 hours after data merge starts)
    # Gives data merge workflow enough time to complete
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual trigger from GitHub Actions UI

# Prevent concurrent runs - wait for any running workflow to finish
concurrency:
  group: cache-bust-workflow
  cancel-in-progress: false

jobs:
  cache-bust:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main  # Always checkout latest main branch
      
      - name: Pull latest changes
        run: |
          git pull origin main --rebase
      
      - name: Force cache bust for all static assets
        run: |
          # Update version numbers in HTML files to force browser cache refresh
          CURRENT_DATE=$(date +'%Y%m%d')
          CURRENT_TIME=$(date +'%H%M%S')
          VERSION="${CURRENT_DATE}_${CURRENT_TIME}"
          
          echo "Applying cache busting with version: ${VERSION}"
          
          # Update all version numbers in HTML files (match date-time format: v=20251009_093607)
          sed -i "s/v=[0-9_]\+/v=${VERSION}/g" docs/dashboard.html
          sed -i "s/v=[0-9_]\+/v=${VERSION}/g" docs/index.html
          
          # Also update any hardcoded version numbers in CSS/JS files
          find docs -name "*.css" -exec sed -i "s/v=[0-9_]\+/v=${VERSION}/g" {} \;
          find docs -name "*.js" -exec sed -i "s/v=[0-9_]\+/v=${VERSION}/g" {} \;
          
          echo "Updated version numbers to: ${VERSION}"
          echo "Cache-busting applied to all static assets"
          echo "Files updated:"
          git diff --name-only
      
      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes=true" >> $GITHUB_OUTPUT
          git status
      
      - name: Commit and push cache bust changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Only add files in docs/ directory (HTML, CSS, JS)
          git add docs/*.html docs/js/ docs/styles/
          
          git commit -m "%%% Workflow: daily cache bust - force browser refresh [$(date +'%Y-%m-%d %H:%M:%S')]"
          
          # Use retry logic for push in case of conflicts
          MAX_RETRIES=3
          RETRY_COUNT=0
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if git push origin main; then
              echo "Push successful"
              break
            else
              RETRY_COUNT=$((RETRY_COUNT + 1))
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "Push failed, attempt $RETRY_COUNT of $MAX_RETRIES. Retrying in 10 seconds..."
                sleep 10
                git pull origin main --rebase
              else
                echo "Push failed after $MAX_RETRIES attempts"
                exit 1
              fi
            fi
          done
      
      - name: No cache bust changes needed
        if: steps.check_changes.outputs.changes != 'true'
        run: |
          echo "No cache bust changes needed - all files already up to date"
      
      - name: Upload workflow summary
        if: always()
        run: |
          echo "## Daily Cache Bust - $(date +'%Y-%m-%d')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_changes.outputs.changes }}" == "true" ]; then
            echo "✅ **Status:** Cache bust applied successfully" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **Browser Cache:** Will be refreshed on next visit" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **Status:** No cache bust changes needed" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **Browser Cache:** Already up to date" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cache Busting Details" >> $GITHUB_STEP_SUMMARY
          echo "- Updated version numbers in HTML, CSS, and JS files" >> $GITHUB_STEP_SUMMARY
          echo "- Forces browser cache refresh for all static assets" >> $GITHUB_STEP_SUMMARY
          echo "- Runs automatically at 2 AM UTC daily (1 hour after data merge)" >> $GITHUB_STEP_SUMMARY
          echo "- Ensures users always see the latest version" >> $GITHUB_STEP_SUMMARY